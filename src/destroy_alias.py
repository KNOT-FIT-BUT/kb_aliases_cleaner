#!/usr/bin/env python3
# encoding: utf-8
"""
destroy_alias.py is a small tool, that filters aliases from KB depending on
num_aliases.tsv generated by match_alias,py tool and namegen output that
provides given names to be filtered.

@author: Daniel Kříž
@contact: xkrizd03@vutbr.fit.cz
"""
POS_ALIAS = 4
KB_HEAD = 8
TARGETS = 0
GN_NAMES = 0


def get_items(filename, column, separator='\t'):
    """ Returns word located in columb of a file defined as filename. Each
        line is separated with separator (default value = '\t') """
    items = set()
    with open(filename, 'r') as opened_file:
        file_content = opened_file.readlines()
    for line in file_content:
        items.add(line.split(separator)[column])
    return items


if __name__ == "__main__":
    targets = get_items('num_aliases.tsv', TARGETS)
    given_names = get_items('namegen_gn_output.txt', GN_NAMES, '\n')

    targets.intersection_update(given_names)

    with open('KB_all.tsv', 'r') as KB:
        KB_lines = KB.readlines()

    KB = open('KB_all.tsv', 'w')

    # insert KB HEAD to the rewriten KB
    for idx in range(KB_HEAD):
        KB.write(KB_lines[idx])

    for num in range(KB_HEAD, len(KB_lines)):
        line = KB_lines[num]
        line = line.split('\t')
        aliases = line[POS_ALIAS].split('|')
        aliases = filter(lambda name: not (name.split('#')[0] in targets),
                         aliases)
        line[POS_ALIAS] = '|'.join(list(aliases))
        KB.write('\t'.join(line))

    KB.close()
